(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{567:function(t,s,a){"use strict";a.r(s);var n=a(12),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"第一周的总结及收获"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第一周的总结及收获"}},[t._v("#")]),t._v(" 第一周的总结及收获")]),t._v(" "),a("h3",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("编程能力")]),t._v(" "),a("p",[t._v("了解基本的代码没有多少困难，但是有些语法还是比较难懂。比如，with、面向对象、文件路径、正则表达式等，还有对 numpy 也没有很深的了解。")])]),t._v(" "),a("li",[a("p",[t._v("深度学习")]),t._v(" "),a("p",[t._v("已经把斋藤康毅的深度学习入门和深度学习进阶的书都读完了，里面的大部分代码也都自己写过。对深度学习或神经网络有了一个初步的认识。")])]),t._v(" "),a("li",[a("p",[t._v("框架")]),t._v(" "),a("p",[t._v("最近在学一个 TensorFlow 的教程，想用TensorFlow 来实现一个 crf-BiLstm-bert 的 模型。")]),t._v(" "),a("p",[t._v("我选择TensorFlow的理由有以下几个：")]),t._v(" "),a("ul",[a("li",[t._v("首先我比较喜欢谷歌这个公司，所以相信TensorFlow 肯定是个比较不错的框架。")]),t._v(" "),a("li",[t._v("TensorFlow 在工业界比PyThorch 更具有优势，而我想做一个真的能用到实际生活的东西。")]),t._v(" "),a("li",[t._v("TensorFlow 的生态和前景都比较乐观，它里面有很多可以现用的模型和数据集，官方对它的支持也比较好，有很全面的官方教程和一些工具，比如CoLab 、Tensorboard 。")])])])]),t._v(" "),a("h3",{attrs:{id:"收获"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#收获"}},[t._v("#")]),t._v(" 收获")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("编程能力")]),t._v(" "),a("p",[t._v("最近写了不少代码，对python的整体认知有了一定的增加。不过还有很多不足的地方，所以以后还会在编程上学习更多的专业知识。")])]),t._v(" "),a("li",[a("p",[t._v("深度学习")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("数据集")]),t._v(" "),a("p",[t._v("为什么深度学习之前一直火不起来，很大原因是没有很好的数据去训练模型，因此数据或数据集在深度学习中是一个非常重要的环节。目前我接触数据都是很早之前数据科学家收集并整理的，但是以后要自己收集并整理数据是一个非常漫长且枯燥的。")])]),t._v(" "),a("li",[a("p",[t._v("预处理")]),t._v(" "),a("p",[t._v("首先获取数据后还要把一些无用的数据删除掉，其次还要把数据类型改成模型能训练的类型。")])]),t._v(" "),a("li",[a("p",[t._v("激活函数")]),t._v(" "),a("p",[t._v("如果模型里不用激活函数，则模型里的函数或者公式都是线性的无法传递梯度信息。有了激活函数就可以把线性改成非线性。激活函数有sigmoid、relu、tanh 等，其中relu函数在最近用的比较多，tanh在LSTM里面有用到。")])]),t._v(" "),a("li",[a("p",[t._v("标量、向量、张量？")]),t._v(" "),a("p",[t._v("标量是只有一个数的，比如7或者8等；向量是同时拥有大小和方向的，通常不是一个数，比如[8,7,9]或[-1,2,3]等，你不能改变它的方向[7,8,9]变[9,8,7]就不是一个向量了；张量也叫矩阵，把向量扩展到N维就是一个张量，[[8,5,7],[5,2,3]]可以算一个张量。模型里面的运算就是这三个互相乘除加减。")])]),t._v(" "),a("li",[a("p",[t._v("模型")]),t._v(" "),a("p",[t._v("我认为模型就是一个非常复杂的函数，里面可能有好几万，甚至上亿的”系数”。这里面的“系数”就是模型的权重，还有一个偏置，两者是我们不停训练的对象，利用数据集就可以从中学习到最佳的权重和偏置。")])]),t._v(" "),a("li",[a("p",[t._v("损失函数")]),t._v(" "),a("p",[t._v("loss就是模型预测的值和正确的值之间的差距。交叉熵函数是一个损失函数。我们利用loss来求各个权重和偏置对它的偏微分，并更新这些权重和偏置，直到它的值小到可以忽略的时候模型就训练完成了。")])]),t._v(" "),a("li",[a("p",[t._v("更新函数")]),t._v(" "),a("p",[t._v("我们不能把上面所说的偏微分原封不动地从权重和偏置中减去，而是以一定的比例来更新权重和偏置，这个比例就是所谓的学习率。学习率的更新方法也有很多，而且在不懂模型的表现也会不同。更新函数有Adam、SGD、Adgrade等。")])])])]),t._v(" "),a("li",[a("p",[t._v("TensorFlow")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("首先TensorFlow的使用体验还是不错，不过还是出现了一些挫折。")]),t._v(" "),a("p",[t._v("我一次使用TensorFlow 是直接从官网的教程来学习的，但是里面的例子都是很抽象且高度封装的，我\t硬着头皮学了几天发现这样下去真的最后啥都学不到，然后我在YouTube上看到一个教程，老师讲的很\t不错，并且是从深度学习基础开始讲起来的。这个视频让我了解到很多TensorFlow 比较底层的逻辑和\t数据类型，比自己在官网教程学的效率高很多。")])]),t._v(" "),a("li",[a("p",[t._v("numpy的数据类型 和Tensor数据类型互相转换")]),t._v(" "),a("p",[t._v("numpy 或普通数据类型转Tensor 可以用"),a("code",[t._v("tf.cast")]),t._v("或者"),a("code",[t._v("tf.convert_to_tensor")])]),t._v(" "),a("p",[t._v("Tensor 转 numpy 或普通数据类型 可用 "),a("code",[t._v("xx.numpy()")])])]),t._v(" "),a("li",[a("p",[t._v("利用TensorFlow 搭建一个简单的模型")])])]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("model "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Sequential"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("    \n    layers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Dense"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("256")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" activation"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("tf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("relu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("    \n    layers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Dense"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("128")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" activation"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("tf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("relu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("    \n    layers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Dense"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("64")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" activation"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("tf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("relu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("    \n    layers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Dense"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("32")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" activation"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("tf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("relu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("    \n    layers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Dense"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])])])]),t._v(" "),a("h2",{attrs:{id:"下周的计划"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#下周的计划"}},[t._v("#")]),t._v(" 下周的计划")]),t._v(" "),a("h3",{attrs:{id:"编程能力"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编程能力"}},[t._v("#")]),t._v(" 编程能力")]),t._v(" "),a("p",[t._v("继续写代码，积累自己的编程和算法经验。")]),t._v(" "),a("h3",{attrs:{id:"tensorflow"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tensorflow"}},[t._v("#")]),t._v(" TensorFlow")]),t._v(" "),a("p",[t._v("完成剩下的视频教程，并尝试写一些自己模型。")]),t._v(" "),a("h3",{attrs:{id:"准备回家"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#准备回家"}},[t._v("#")]),t._v(" 准备回家")])])}),[],!1,null,null,null);s.default=e.exports}}]);